name: Deploy to Server with SSH

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Create .env file from secrets
      - name: Create .env file
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
        run: |
          # Debug: Check if secrets are being set
          echo "Creating .env file"
          cp .env-example .env
          
          # Use printf to ensure proper formatting and escape special characters
          printf "VITE_FIREBASE_API_KEY=%s\n" "$VITE_FIREBASE_API_KEY" >> .env
          printf "VITE_FIREBASE_AUTH_DOMAIN=%s\n" "$VITE_FIREBASE_AUTH_DOMAIN" >> .env
          printf "VITE_FIREBASE_PROJECT_ID=%s\n" "$VITE_FIREBASE_PROJECT_ID" >> .env
          printf "VITE_FIREBASE_STORAGE_BUCKET=%s\n" "$VITE_FIREBASE_STORAGE_BUCKET" >> .env
          printf "VITE_FIREBASE_MESSAGING_SENDER_ID=%s\n" "$VITE_FIREBASE_MESSAGING_SENDER_ID" >> .env
          printf "VITE_FIREBASE_APP_ID=%s\n" "$VITE_FIREBASE_APP_ID" >> .env
          
          # Debug: Show the contents of the .env file
          echo "Contents of .env file:"
          cat .env

      # Step 4: Install dependencies and build the project
      - name: Build React App
        run: |
          npm install
          npm run build

      # Step 5: Deploy to server using SSH
      - name: Deploy to Server
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          DEPLOY_PATH: /var/www/html/oc.anichur.com
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Install SSH key
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

          # Remove existing files
          ssh -i ~/.ssh/id_rsa $USER@$HOST "rm -rf $DEPLOY_PATH/*"

          # Deploy new files using rsync
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/id_rsa" \
            ./dist/ \
            $USER@$HOST:$DEPLOY_PATH/